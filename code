import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class NumberGuessingGame {
    private int secretNumber;
    private int attempts;

    private JFrame frame;
    private JTextField guessInput;
    private JLabel feedbackLabel;
    private JButton submitButton;
    private JButton resetButton;

    public NumberGuessingGame() {
        // Initialize the game
        resetGame();

        // Create the GUI components
        frame = new JFrame("Number Guessing Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 300);
        frame.setLayout(new FlowLayout());

        JLabel titleLabel = new JLabel("Guess the Number (1-100)");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 16));
        frame.add(titleLabel);

        guessInput = new JTextField(10);
        guessInput.setFont(new Font("Arial", Font.PLAIN, 14));
        frame.add(guessInput);

        submitButton = new JButton("Submit");
        submitButton.setFont(new Font("Arial", Font.PLAIN, 14));
        frame.add(submitButton);

        resetButton = new JButton("Reset");
        resetButton.setFont(new Font("Arial", Font.PLAIN, 14));
        frame.add(resetButton);

        feedbackLabel = new JLabel("");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        frame.add(feedbackLabel);

        // Add button actions
        submitButton.addActionListener(new SubmitAction());
        resetButton.addActionListener(new ResetAction());

        // Show the GUI
        frame.setVisible(true);
    }

    private void resetGame() {
        Random random = new Random();
        secretNumber = random.nextInt(100) + 1; // Random number between 1 and 100
        attempts = 0;
    }

    private class SubmitAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String guessText = guessInput.getText();
            try {
                int guess = Integer.parseInt(guessText);
                attempts++;

                if (guess < secretNumber) {
                    feedbackLabel.setText("Too low! Try again.");
                } else if (guess > secretNumber) {
                    feedbackLabel.setText("Too high! Try again.");
                } else {
                    feedbackLabel.setText("Congratulations! You guessed it in " + attempts + " attempts.");
                    submitButton.setEnabled(false);
                    guessInput.setEnabled(false);
                }
            } catch (NumberFormatException ex) {
                feedbackLabel.setText("Please enter a valid number!");
            }
        }
    }

    private class ResetAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            resetGame();
            feedbackLabel.setText("");
            guessInput.setText("");
            guessInput.setEnabled(true);
            submitButton.setEnabled(true);
        }
    }

    public static void main(String[] args) {
        new NumberGuessingGame();
    }
}
